#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'tautulli'
        intport: '8181'
        extport: '8181'
        image: 'linuxserver/tautulli'

    # CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/coreapps/apps/_core.yml'
      
    - name: 'Including plugins '
      include_tasks: '/opt/coreapps/apps/_plugins.yml'
      
    - name: 'Checking for existing app data'
      stat:
        path: /opt/appdata/tautulli/config.ini
      register: confcheck

    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.frontend.rule: 'Host:plexpy.{{domain.stdout}},{{pgrole}}.{{domain.stdout}},{{tldset}}'

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/etc/localtime:/etc/localtime:ro'
          - '/opt/appdata/{{pgrole}}:/config'
          - '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Logs:/logs'
          - '/opt/appdata/{{pgrole}}/scripts:/scripts'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: '1000'
          PGID: '1000'


    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'

    # AFTER ########################################################################
    - name: 'Configuring {{pgrole}} for first time use'
      block:
        - name: 'Waiting for {{pgrole}} to start'
          wait_for:
            path: '/opt/appdata/tautulli/config.ini'
            state: present

        - name: Stop Container
          docker_container:
            name: tautulli
            state: stopped

        # - name: set http_username
        #   ini_file:
        #     path: '/opt/appdata/{{pgrole}}/config.ini'
        #     section: misc
        #     option: http_username
        #     value: plex
        #     state: present

        # - name: set http_password
        #   ini_file:
        #     path: '/opt/appdata/{{pgrole}}/config.ini'
        #     section: misc
        #     option: http_password
        #     value: guide
        #     state: present

        - name: Restart {{pgrole}}
          docker_container:
            name: '{{pgrole}}'
            state: started

      when: not confcheck.stat.exists
